<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dev-ops on Alan Hollis</title>
    <link>http://alanhollis.com/dev-ops/index.xml</link>
    <description>Recent content in Dev-ops on Alan Hollis</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 01 Feb 2017 12:44:58 +0530</lastBuildDate>
    <atom:link href="http://alanhollis.com/dev-ops/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Devops</title>
      <link>http://alanhollis.com/dev-ops/</link>
      <pubDate>Wed, 01 Feb 2017 12:44:58 +0530</pubDate>
      
      <guid>http://alanhollis.com/dev-ops/</guid>
      <description>&lt;div class=&#34;row&#34;&gt;

    &lt;div class=&#34;col&#34;&gt;
        &lt;div class=&#34;card&#34; style=&#34;font-family: &#39;Open Sans&#39;, sans-serif;&#34;&gt;

            &lt;div class=&#34;card-block&#34;&gt;

                &lt;div class=&#34;card-title&#34;&gt;
                    &lt;h2
                            style=&#34;font-weight:bold;font-family: &#39;Nixie One&#39;; margin-bottom: 20px&#34;&gt;
                        DevOps&lt;/h2&gt;
                &lt;/div&gt;

            &lt;/div&gt;


        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;div class=&#34;row&#34;&gt;

    &lt;div class=&#34;col&#34;&gt;
        &lt;div class=&#34;card&#34; style=&#34;font-family: &#39;Open Sans&#39;, sans-serif;&#34;&gt;

            &lt;div class=&#34;card-block&#34;&gt;

                &lt;div class=&#34;card-title&#34;&gt;
                    &lt;h2
                            style=&#34;font-weight:bold;font-family: &#39;Nixie One&#39;; margin-bottom: 20px&#34;&gt;
                        &lt;a name=&#34;tutorials&#34;&gt;Case Studies&lt;/a&gt;&lt;/h2&gt;
                &lt;/div&gt;

                &lt;div class=&#34;card-title&#34;&gt;
                    &lt;h3
                            style=&#34;font-weight:bold;font-family: &#39;Nixie One&#39;; margin-bottom: 20px&#34;&gt;
                        &lt;a name=&#34;tutorials&#34;&gt;Agricamera.co.uk&lt;/a&gt;&lt;/h3&gt;
                &lt;/div&gt;

                &lt;p&gt;
                    Agricamera&#39;s entire software environment was built with DevOps in mind from the start. Before any
                    new
                    software was written careful thought was taken to make sure the development environments were
                    immediately
                    reproducible by issuing just a couple of commands using Vagrant and Ansible. All of Agricamera&#39;s
                    services are cloud based.
                &lt;/p&gt;

                &lt;p&gt;
                    This forethought meant deploying to production was just an extension of the development process.
                    Ansible
                    scripts were created which allowed every aspect of Agricamera&#39;s architecture to be deployed and
                    re-deployed instantly.
                    This included provisioning of highly available node, web and database servers. As well as the
                    management of 100&#39;s of
                    remote devices deployed up and down the country.
                &lt;/p&gt;

                &lt;p&gt;
                    In order to monitor the servers Agricamera use OMD/Check_MK ( wrappers around nagios ) which provide
                    a number of
                    standard &#34;off the shelf checks&#34; on the system, as well as custom checks written especially for
                    Agricamera&#39;s
                    software. Logstash and Kibana are used to give the ops team insight into customers problems with
                    bespoke
                    dashboards written to help better understand the systems. Integration with HipChat allows rapid
                    response
                    when problems do occur.
                &lt;/p&gt;

                &lt;p&gt;
                    Agricameras database are automatically backed up to Amazon S3 using cron jobs written in Ansible.
                    The database restore process is also automated for simple &#34;worst case scenario&#34; data restorations.
                &lt;/p&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;div class=&#34;row&#34;&gt;

    &lt;div class=&#34;col&#34;&gt;
        &lt;div class=&#34;card&#34; style=&#34;font-family: &#39;Open Sans&#39;, sans-serif;&#34;&gt;

            &lt;div class=&#34;card-block&#34;&gt;

                &lt;div class=&#34;card-title&#34;&gt;
                    &lt;h2
                            style=&#34;font-weight:bold;font-family: &#39;Nixie One&#39;; margin-bottom: 20px&#34;&gt;
                        &lt;a name=&#34;tutorials&#34;&gt;Tools&lt;/a&gt;&lt;/h2&gt;
                &lt;/div&gt;

                &lt;div class=&#34;card-title&#34;&gt;
                    &lt;h3
                            style=&#34;font-weight:bold;font-family: &#39;Nixie One&#39;; margin-bottom: 20px&#34;&gt;
                        &lt;a name=&#34;tutorials&#34;&gt;Ansible&lt;/a&gt;&lt;/h3&gt;
                &lt;/div&gt;

                &lt;p&gt;
                    After experimenting with a number of DevOps tools over the years Ansible quickly stood out as my
                    favourite.
                    The syntax is easy to reason about, the way it works is intuitive, and it&#39;s quick to get up and
                    running for any
                    type of technology project.
                &lt;/p&gt;


            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>