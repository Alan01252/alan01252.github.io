<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Architectures on Alan Hollis</title>
    <link>http://alanhollis.com/architecture/</link>
    <description>Recent content in Architectures on Alan Hollis</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 01 Feb 2017 12:44:58 +0530</lastBuildDate>
    
	<atom:link href="http://alanhollis.com/architecture/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Architecture</title>
      <link>http://alanhollis.com/architecture/</link>
      <pubDate>Wed, 01 Feb 2017 12:44:58 +0530</pubDate>
      
      <guid>http://alanhollis.com/architecture/</guid>
      <description>Architecture      Case Studies  Agricamera   Agricamera is a start-up competing in the CCTV industry. The unique value proposition is that compared to other CCTV providers their solution requires no third party intervention and &#34;just works&#34;.  In order to achieve this goal the architecture needed to tackle the following challenges:  Communicate with cameras behind home routers without the need for customers needing to log on to the router  Allow support staff to diagnose networking problems Platform must be available at all times Customer must have best possible view of camera depending on where they current are, local network / remote viewing  Cameras must be accessible via the widest range of devices Quickly scalable as customer base grows   The bulk of the application is cloud basz , with individual camera controllers running on Agricamera&#39;s customer networks.</description>
    </item>
    
  </channel>
</rss>